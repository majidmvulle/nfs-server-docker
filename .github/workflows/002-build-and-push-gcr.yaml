name: Build and Push Docker Image

on:
  workflow_run:
    workflows: ["Create Tag on Merge to Main"]
    types:
      - completed
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag version to use (e.g., v1.2.3)'
        required: true
        type: string

jobs:
  build:
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch' }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.workflow_run.head_branch || 'main' }}
          fetch-depth: 0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Get Version
        id: get_version
        shell: bash
        run: |
          # Triggered by workflow_run (tag creation from PR merge)
          if [[ "${{ github.event_name }}" == "workflow_run" ]]; then
            echo "version=$(git describe --tags --abbrev=0 --match "v*" 2>/dev/null || echo '')" >> "$GITHUB_OUTPUT"
          # Triggered by workflow_dispatch (manual build with specified tag)
          elif [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            echo "version=${{ github.event.inputs.tag }}" >> "$GITHUB_OUTPUT"
          fi

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository_owner }}/nfs-server-docker
          tags: |
            type=raw,value=${{ steps.get_version.outputs.version }}
            type=sha,prefix=sha-  # Optional SHA tag

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        id: build-push
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
